{"mappings":"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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar tableHead = document.querySelector(\"thead\");\nvar tableBody = document.querySelector(\"tbody\");\nvar rows = tableBody.rows;\ntableHead.addEventListener(\"click\", function(e) {\n    var columnName = e.target.closest(\"th\");\n    if (!columnName) return;\n    if (!columnName.hasAttribute(\"direction\") || columnName.getAttribute(\"direction\") === \"desc\") columnName.setAttribute(\"direction\", \"asc\");\n    else columnName.setAttribute(\"direction\", \"desc\");\n    var people = [];\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        for(var _iterator = rows[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var row = _step.value;\n            people.push({\n                Name: row.cells[0].textContent,\n                Position: row.cells[1].textContent,\n                Office: row.cells[2].textContent,\n                Age: row.cells[3].textContent,\n                Salary: row.cells[4].textContent\n            });\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n    var sortedName = columnName.textContent.trim();\n    people.sort(function(person1, person2) {\n        if (sortedName === \"Name\" || sortedName === \"Office\" || sortedName === \"Position\") return columnName.getAttribute(\"direction\") === \"asc\" ? person1[sortedName].localeCompare(person2[sortedName]) : person2[sortedName].localeCompare(person1[sortedName]);\n        if (sortedName === \"Age\") return columnName.getAttribute(\"direction\") === \"asc\" ? parseInt(person1[sortedName]) - parseInt(person2[sortedName]) : parseInt(person2[sortedName]) - parseInt(person1[sortedName]);\n        if (sortedName === \"Salary\") {\n            var salary1 = parseInt(person1[sortedName].replace(/[^0-9]/g, \"\"), 10);\n            var salary2 = parseInt(person2[sortedName].replace(/[^0-9]/g, \"\"), 10);\n            return columnName.getAttribute(\"direction\") === \"asc\" ? salary1 - salary2 : salary2 - salary1;\n        }\n    });\n    tableBody.innerHTML = \"\";\n    var _iteratorNormalCompletion1 = true, _didIteratorError1 = false, _iteratorError1 = undefined;\n    try {\n        for(var _iterator1 = people[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true){\n            var person = _step1.value;\n            var row1 = document.createElement(\"tr\");\n            row1.innerHTML = \"\\n      <td>\".concat(person.Name, \"</td>\\n      <td>\").concat(person.Position, \"</td>\\n      <td>\").concat(person.Office, \"</td>\\n      <td>\").concat(person.Age, \"</td>\\n      <td>\").concat(person.Salary, \"</td>\\n    \");\n            tableBody.appendChild(row1);\n        }\n    } catch (err) {\n        _didIteratorError1 = true;\n        _iteratorError1 = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion1 && _iterator1.return != null) {\n                _iterator1.return();\n            }\n        } finally{\n            if (_didIteratorError1) {\n                throw _iteratorError1;\n            }\n        }\n    }\n    return 0;\n});\ntableBody.addEventListener(\"click\", function(e) {\n    var targetRow = e.target.closest(\"tr\");\n    if (!targetRow) return;\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        for(var _iterator = rows[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var row = _step.value;\n            row.classList.remove(\"active\");\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n    targetRow.classList.add(\"active\");\n});\nvar body = document.querySelector(\"body\");\nvar form = document.createElement(\"form\");\nform.classList.add(\"new-employee-form\");\nform.innerHTML = '\\n  <label>Name: <input name=\"name\" type=\"text\" data-qa=\"name\" required></label>\\n  <label>Position: <input name=\"position\" type=\"text\" data-qa=\"position\" required></label>\\n  <label>Office:\\n    <select name=\"office\" data-qa=\"office\" required>\\n      <option value=\"Tokyo\">Tokyo</option>\\n      <option value=\"Singapore\">Singapore</option>\\n      <option value=\"London\">London</option>\\n      <option value=\"New York\">New York</option>\\n      <option value=\"Edinburgh\">Edinburgh</option>\\n      <option value=\"San Francisco\">San Francisco</option>\\n    </select>\\n  </label>\\n  <label>Age: <input name=\"age\" type=\"number\" data-qa=\"age\" required></label>\\n  <label>Salary: <input name=\"salary\" type=\"number\" data-qa=\"salary\" required></label>\\n  <button type=\"submit\">Save to table</button>\\n';\nbody.appendChild(form);\nvar pushNotification = function(title, description, type) {\n    var notification = document.createElement(\"div\");\n    var notificationTitle = document.createElement(\"h2\");\n    var notificationMessage = document.createElement(\"p\");\n    notification.classList.add(\"notification\", type);\n    notification.setAttribute(\"data-qa\", \"notification\");\n    notificationTitle.textContent = title;\n    notificationTitle.className = \"title\";\n    notificationMessage.innerHTML = description;\n    notification.appendChild(notificationTitle);\n    notification.appendChild(notificationMessage);\n    document.body.appendChild(notification);\n    setTimeout(function() {\n        notification.style.display = \"none\";\n    }, 5000);\n};\nvar button = document.querySelector(\"button\");\nbutton.addEventListener(\"click\", function(e) {\n    e.preventDefault();\n    if (!form.querySelector('input[name=\"name\"]').value || !form.querySelector('input[name=\"position\"]').value) {\n        pushNotification(\"Error message\", \"Please fill out all fields!\", \"error\");\n        return;\n    }\n    if (form.querySelector('input[name=\"name\"]').value.length < 4) {\n        pushNotification(\"Error message\", \"Please enter a name with more than four characters.\", \"error\");\n        return;\n    }\n    if (form.querySelector('input[name=\"age\"]').value < 18 || form.querySelector('input[name=\"age\"]').value > 90) {\n        pushNotification(\"Error message\", \"Please enter an age between 18 and 90.\", \"error\");\n        return;\n    }\n    var person = {\n        Name: form.querySelector('input[name=\"name\"]').value,\n        Position: form.querySelector('input[name=\"position\"]').value,\n        Office: form.querySelector('select[name=\"office\"]').value,\n        Age: form.querySelector('input[name=\"age\"]').value,\n        Salary: \"$\" + Number(form.querySelector('input[name=\"salary\"]').value).toLocaleString(\"en-US\")\n    };\n    var row = document.createElement(\"tr\");\n    row.innerHTML = \"\\n    <td>\".concat(person.Name, \"</td>\\n    <td>\").concat(person.Position, \"</td>\\n    <td>\").concat(person.Office, \"</td>\\n    <td>\").concat(person.Age, \"</td>\\n    <td>\").concat(person.Salary, \"</td>\\n  \");\n    tableBody.appendChild(row);\n    pushNotification(\"Success message\", \"New employee added to the table.\", \"success\");\n    form.reset();\n});\n\n//# sourceMappingURL=index.4d32aff3.js.map\n","'use strict';\n\nconst tableHead = document.querySelector('thead');\nconst tableBody = document.querySelector('tbody');\nconst rows = tableBody.rows;\n\ntableHead.addEventListener('click', (e) => {\n  const columnName = e.target.closest('th');\n\n  if (!columnName) {\n    return;\n  }\n\n  if (\n    !columnName.hasAttribute('direction') ||\n    columnName.getAttribute('direction') === 'desc'\n  ) {\n    columnName.setAttribute('direction', 'asc');\n  } else {\n    columnName.setAttribute('direction', 'desc');\n  }\n\n  const people = [];\n\n  for (const row of rows) {\n    people.push({\n      Name: row.cells[0].textContent,\n      Position: row.cells[1].textContent,\n      Office: row.cells[2].textContent,\n      Age: row.cells[3].textContent,\n      Salary: row.cells[4].textContent,\n    });\n  }\n\n  const sortedName = columnName.textContent.trim();\n\n  people.sort((person1, person2) => {\n    if (\n      sortedName === 'Name' ||\n      sortedName === 'Office' ||\n      sortedName === 'Position'\n    ) {\n      return columnName.getAttribute('direction') === 'asc'\n        ? person1[sortedName].localeCompare(person2[sortedName])\n        : person2[sortedName].localeCompare(person1[sortedName]);\n    }\n\n    if (sortedName === 'Age') {\n      return columnName.getAttribute('direction') === 'asc'\n        ? parseInt(person1[sortedName]) - parseInt(person2[sortedName])\n        : parseInt(person2[sortedName]) - parseInt(person1[sortedName]);\n    }\n\n    if (sortedName === 'Salary') {\n      const salary1 = parseInt(person1[sortedName].replace(/[^0-9]/g, ''), 10);\n      const salary2 = parseInt(person2[sortedName].replace(/[^0-9]/g, ''), 10);\n\n      return columnName.getAttribute('direction') === 'asc'\n        ? salary1 - salary2\n        : salary2 - salary1;\n    }\n  });\n\n  tableBody.innerHTML = '';\n\n  for (const person of people) {\n    const row = document.createElement('tr');\n\n    row.innerHTML = `\n      <td>${person.Name}</td>\n      <td>${person.Position}</td>\n      <td>${person.Office}</td>\n      <td>${person.Age}</td>\n      <td>${person.Salary}</td>\n    `;\n\n    tableBody.appendChild(row);\n  }\n\n  return 0;\n});\n\ntableBody.addEventListener('click', (e) => {\n  const targetRow = e.target.closest('tr');\n\n  if (!targetRow) {\n    return;\n  }\n\n  for (const row of rows) {\n    row.classList.remove('active');\n  }\n\n  targetRow.classList.add('active');\n});\n\nconst body = document.querySelector('body');\nconst form = document.createElement('form');\n\nform.classList.add('new-employee-form');\n\nform.innerHTML = `\n  <label>Name: <input name=\"name\" type=\"text\" data-qa=\"name\" required></label>\n  <label>Position: <input name=\"position\" type=\"text\" data-qa=\"position\" required></label>\n  <label>Office:\n    <select name=\"office\" data-qa=\"office\" required>\n      <option value=\"Tokyo\">Tokyo</option>\n      <option value=\"Singapore\">Singapore</option>\n      <option value=\"London\">London</option>\n      <option value=\"New York\">New York</option>\n      <option value=\"Edinburgh\">Edinburgh</option>\n      <option value=\"San Francisco\">San Francisco</option>\n    </select>\n  </label>\n  <label>Age: <input name=\"age\" type=\"number\" data-qa=\"age\" required></label>\n  <label>Salary: <input name=\"salary\" type=\"number\" data-qa=\"salary\" required></label>\n  <button type=\"submit\">Save to table</button>\n`;\n\nbody.appendChild(form);\n\nconst pushNotification = (title, description, type) => {\n  const notification = document.createElement('div');\n  const notificationTitle = document.createElement('h2');\n  const notificationMessage = document.createElement('p');\n\n  notification.classList.add('notification', type);\n  notification.setAttribute('data-qa', 'notification');\n  notificationTitle.textContent = title;\n  notificationTitle.className = 'title';\n  notificationMessage.innerHTML = description;\n  notification.appendChild(notificationTitle);\n  notification.appendChild(notificationMessage);\n  document.body.appendChild(notification);\n\n  setTimeout(() => {\n    notification.style.display = 'none';\n  }, 5000);\n};\n\nconst button = document.querySelector('button');\n\nbutton.addEventListener('click', (e) => {\n  e.preventDefault();\n\n  if (\n    !form.querySelector('input[name=\"name\"]').value ||\n    !form.querySelector('input[name=\"position\"]').value\n  ) {\n    pushNotification('Error message', 'Please fill out all fields!', 'error');\n\n    return;\n  }\n\n  if (form.querySelector('input[name=\"name\"]').value.length < 4) {\n    pushNotification(\n      'Error message',\n      'Please enter a name with more than four characters.',\n      'error',\n    );\n\n    return;\n  }\n\n  if (\n    form.querySelector('input[name=\"age\"]').value < 18 ||\n    form.querySelector('input[name=\"age\"]').value > 90\n  ) {\n    pushNotification(\n      'Error message',\n      'Please enter an age between 18 and 90.',\n      'error',\n    );\n\n    return;\n  }\n\n  const person = {\n    Name: form.querySelector('input[name=\"name\"]').value,\n    Position: form.querySelector('input[name=\"position\"]').value,\n    Office: form.querySelector('select[name=\"office\"]').value,\n    Age: form.querySelector('input[name=\"age\"]').value,\n    Salary:\n      '$' +\n      Number(form.querySelector('input[name=\"salary\"]').value).toLocaleString(\n        'en-US',\n      ),\n  };\n  const row = document.createElement('tr');\n\n  row.innerHTML = `\n    <td>${person.Name}</td>\n    <td>${person.Position}</td>\n    <td>${person.Office}</td>\n    <td>${person.Age}</td>\n    <td>${person.Salary}</td>\n  `;\n\n  tableBody.appendChild(row);\n\n  pushNotification(\n    'Success message',\n    'New employee added to the table.',\n    'success',\n  );\n  form.reset();\n});\n"],"names":["tableHead","document","querySelector","tableBody","rows","addEventListener","e","columnName","target","closest","hasAttribute","getAttribute","setAttribute","people","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","row","value","push","Name","cells","textContent","Position","Office","Age","Salary","err","return","sortedName","trim","sort","person1","person2","localeCompare","parseInt","salary1","replace","salary2","innerHTML","_iteratorNormalCompletion1","_didIteratorError1","_iteratorError1","_step1","_iterator1","person","row1","createElement","concat","appendChild","targetRow","classList","remove","add","body","form","pushNotification","title","description","type","notification","notificationTitle","notificationMessage","className","setTimeout","style","display","button","preventDefault","length","Number","toLocaleString","reset"],"version":3,"file":"index.4d32aff3.js.map"}